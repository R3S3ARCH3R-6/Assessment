package code_examples;

public class Palindrome {

	public static void main(String[] args) {
		String s = "madam";

		//StringBuffer solution
		StringBuffer sb = new StringBuffer(s);
		sb.reverse();
		String s1 = sb.toString();
		
		if(s.equals(s1)){
			System.out.println("Palindrome");
		}else{
			System.out.println("Not Palindrome");
		}
		
		
		//shorthand solution
		if(new StringBuffer(s).reverse().toString().equals(s)){
			System.out.println("Yes, it is a palindrome!");
		}else{
			System.out.println("No, it is not a palindrome!");
		}
		
		//the non-case-sensitive version:
		if(new StringBuffer(s.toLowerCase()).reverse().toString().equals(s.toLowerCase())){
			System.out.println("Yes, it is a palindrome!");
		}else{
			System.out.println("No, it is not a palindrome!");
		}
		
		//index palindrome detector
		int x = 121;
		//we modified "x" to a string by doing: x+"" <--x is now a string
			//"x" can be anything and get turned into a string this way too
			//"" are needed b/c anything with "" are strings
			//concatenation in sysout will not make numbers strings
			//turning "x" into a string isn't "casting", you are bringing you data into a String
		if(new StringBuffer(x+"").reverse().toString().equals(x+"")){
			System.out.println("Yes, it is a numeric palindrome!");
		}else{
			System.out.println("No, it is not a numeric palindrome!");
		}
		
	}
	
	//
	public static boolean isPalindrome(String s){
		boolean b = false;
		if(new StringBuffer(x+"").reverse().toString().equals(x+"")){
			//System.out.println("Yes, it is a numeric palindrome!");
			b = true;
			return b;
		}
		return b;
	}

}
